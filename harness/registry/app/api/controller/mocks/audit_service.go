// Code generated by testify. DO NOT EDIT.

package mocks

import (
	"context"

	"github.com/harness/gitness/audit"
	"github.com/harness/gitness/types"

	"github.com/stretchr/testify/mock"
)

// AuditService is a mock of audit.Service interface.
type AuditService struct {
	mock.Mock
}

// Log provides a mock function
func (m *AuditService) Log(
	ctx context.Context,
	user types.Principal,
	resource audit.Resource,
	action audit.Action,
	spacePath string,
	options ...audit.Option,
) error {
	args := []interface{}{ctx, user, resource, action, spacePath}
	for _, opt := range options {
		args = append(args, opt)
	}
	ret := m.Called(args...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.Principal, audit.Resource, audit.Action, string, ...audit.Option) error); ok {
		r0 = rf(ctx, user, resource, action, spacePath, options...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
