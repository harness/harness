// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	"context"

	"github.com/stretchr/testify/mock"
)

// Transactor is a mock of dbtx.Transactor interface.
type Transactor struct {
	mock.Mock
}

// WithTx provides a mock function
func (m *Transactor) WithTx(ctx context.Context, fn func(context.Context) error, opts ...interface{}) error {
	args := m.Called(ctx, fn, opts)
	return args.Error(0)
}

// BeginTx provides a mock function
func (m *Transactor) BeginTx(ctx context.Context) (context.Context, error) {
	args := m.Called(ctx)
	return args.Get(0).(context.Context), args.Error(1)
}

// CommitTx provides a mock function
func (m *Transactor) CommitTx(ctx context.Context) error {
	args := m.Called(ctx)
	return args.Error(0)
}

// RollbackTx provides a mock function
func (m *Transactor) RollbackTx(ctx context.Context) error {
	args := m.Called(ctx)
	return args.Error(0)
}
